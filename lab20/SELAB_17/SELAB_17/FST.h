#pragma once
#include <iostream>
#include <string>
using namespace std;

// многоточие означает параметрическую упаковку, то есть конструктор может принимать неограниченное количество параметров заданного типа

namespace FST { // пространство имен для недетерминированного конечного автомата
	struct RELATION { // структура для связей вершин в конечном автомате
		char symbol; // символ над связью, по которому происходит переход
		short nnode; // номер смежной вершины
		RELATION( // конструктор структуры с параметрами
			char c = 0x00, // символ перехода
			short ns = NULL // новое состояние
		);
	};

	struct NODE { // структура узла графа конечного автомата
		short n_relation; // количество связей с данной вершиной
		RELATION* relations; // указатель на массив отношений
		NODE(); // конструктор по умолчанию
		NODE( // конструктор с параметрами
			short n, // количество связей
			RELATION re1, ... // передаем связи с этой вершиной
		);
	};

	struct FST { // структура конечного автомата
		const char* strin; // входная строка
		short position; // текущая позиция в цепочке
		short nstates; // количество состояний автомата
		NODE* nodes; // граф переходов
		short* rstates; // возможные состояния автомата в данной позиции
		FST( // конструктор конечного автомата
			const char* s, // цепочка
			short ns, // количество состояний
			NODE n, ... // список состояний(граф переходов)
		);
	};

	bool execute( // выполнить распознавание цепочки
		FST& fst // недетерминированный конечный автомат
	);
	bool step(FST& fst, short*& rstates);
}