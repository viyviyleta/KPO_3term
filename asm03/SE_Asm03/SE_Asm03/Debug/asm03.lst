Microsoft (R) Macro Assembler Version 14.37.32822.0	    11/21/24 14:54:42
asm03.asm						     Page 1 - 1


				.586
				.MODEL FLAT, STDCALL
				includelib kernel32.lib

				ExitProcess PROTO : DWORD
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD

				.stack 4096

 00000000			.const

 00000000			.data
 00000000 10 20 30 40		myBytes BYTE 10h, 20h, 30h, 40h
 00000004 008A 003B 0044	myWords WORD 8Ah, 3Bh, 44h, 5Fh, 99h
	   005F 0099
 0000000E 00000001		myDoubles DWORD 1, 2, 3, 4, 5, 6
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
 00000026 0000000E R		myPointer DWORD myDoubles
 0000002A 00000001		myArr DWORD 1, 2, 3, 0, 5, 6, 7
	   00000002
	   00000003
	   00000000
	   00000005
	   00000006
	   00000007
 00000046 CF EE EB EE E6	SUCESS BYTE "Положительный", 0
	   E8 F2 E5 EB FC
	   ED FB E9 00
 00000054 CE F2 F0 E8 F6	FAIL BYTE "Отрицательный", 0
	   E0 F2 E5 EB FC
	   ED FB E9 00
 00000062 C1 E0 E1 E8 F7	STR1 BYTE "Бабич Виолетта, 2 курс, 7 группа", 0
	   20 C2 E8 EE EB
	   E5 F2 F2 E0 2C
	   20 32 20 EA F3
	   F0 F1 2C 20 37
	   20 E3 F0 F3 EF
	   EF E0 00
 00000083 20 00			STR2 BYTE " ", 0

 00000000			.code
 00000000			main PROC
 00000000  BE 00000004 R		mov ESI, OFFSET myWords
 00000005  66| 8B 46 04			mov AX, [ESI + 4]			; AX = 68 (44)
 00000009  66| 8B 5E 02			mov BX, [ESI + 2]			; BX = 59 (3B)

 0000000D  33 C0			xor eax, eax
 0000000F  BE 0000002A R		mov esi, offset myArr
 00000014  B9 00000007			mov ecx, lengthof myArr

 00000019			CYCLE1:
 00000019  03 06			add eax, [esi]
 0000001B  83 C6 04			add esi, type myArr
 0000001E  E2 F9			loop CYCLE1

 00000020  33 C0			xor eax, eax
 00000022  BB 00000001			mov ebx, 1
 00000027  BE 0000002A R		mov esi, offset myArr
 0000002C  B9 00000007			mov ecx, lengthof myArr

 00000031			CYCLE2:
 00000031  83 3E 00			cmp dword ptr [esi], 0
 00000034  74 07			je FOUND_ZERO
 00000036  83 C6 04			add esi, type myArr
 00000039  E2 F6			loop CYCLE2

 0000003B  EB 0C			jmp NOT_FOUND_ZERO

 0000003D			FOUND_ZERO:
 0000003D  BB 00000000			mov ebx, 0
 00000042  BF 00000046 R		mov edi, OFFSET SUCESS
 00000047  EB 07			jmp SHOW_MESSAGE

 00000049			NOT_FOUND_ZERO:
 00000049  BF 00000054 R	    mov edi, OFFSET FAIL
 0000004E  EB 00		    jmp SHOW_MESSAGE

 00000050			SHOW_MESSAGE:
				    invoke MessageBoxA, 0, edi, offset STR1, 0

 0000005F  6A 00			push 0
 00000061  E8 00000000 E		call ExitProcess
 00000066			main ENDP

				end main
Microsoft (R) Macro Assembler Version 14.37.32822.0	    11/21/24 14:54:42
asm03.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000085 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000066 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000066 Public STDCALL
  CYCLE1 . . . . . . . . . . . .	L Near	 00000019 _TEXT	
  CYCLE2 . . . . . . . . . . . .	L Near	 00000031 _TEXT	
  FOUND_ZERO . . . . . . . . . .	L Near	 0000003D _TEXT	
  NOT_FOUND_ZERO . . . . . . . .	L Near	 00000049 _TEXT	
  SHOW_MESSAGE . . . . . . . . .	L Near	 00000050 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
FAIL . . . . . . . . . . . . . .	Byte	 00000054 _DATA	
STR1 . . . . . . . . . . . . . .	Byte	 00000062 _DATA	
STR2 . . . . . . . . . . . . . .	Byte	 00000083 _DATA	
SUCESS . . . . . . . . . . . . .	Byte	 00000046 _DATA	
myArr  . . . . . . . . . . . . .	DWord	 0000002A _DATA	
myBytes  . . . . . . . . . . . .	Byte	 00000000 _DATA	
myDoubles  . . . . . . . . . . .	DWord	 0000000E _DATA	
myPointer  . . . . . . . . . . .	DWord	 00000026 _DATA	
myWords  . . . . . . . . . . . .	Word	 00000004 _DATA	

	   0 Warnings
	   0 Errors
